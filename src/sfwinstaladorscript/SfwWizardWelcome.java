/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SfwWizardWelcome.java
 *
 * Created on 24/10/2008, 13:07:05
 */

package sfwinstaladorscript;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Hashtable;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JPanel;

import sfwinstaladorscript.interfaces.SfwWizardPage;

/**
 * Página de apresentação.
 */
public class SfwWizardWelcome extends javax.swing.JPanel implements SfwWizardPage {

    /** Creates new form SfwWizardWelcome */
    public SfwWizardWelcome() {
        initComponents();
        this.jTextAreaWelcome.setText(this.carregaTextoJTA());
        this.jTextAreaWelcome.setCaretPosition(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaWelcome = new javax.swing.JTextPane();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(sfwinstaladorscript.SfwInstaladorScriptApp.class).getContext().getResourceMap(SfwWizardWelcome.class);
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sfwinstaladorscript/resources/wizard.jpg"))); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextAreaWelcome.setEditable(false);
        jTextAreaWelcome.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTextAreaWelcome.setFont(resourceMap.getFont("jTextAreaWelcome.font")); // NOI18N
        jTextAreaWelcome.setName("jTextAreaWelcome"); // NOI18N
        jScrollPane2.setViewportView(jTextAreaWelcome);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLabel2)
            .add(jScrollPane2)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextAreaWelcome;
    // End of variables declaration//GEN-END:variables

    /**
     * Implementação da ação do botão "Próximo" para esta página.
     * @param wzPages Hashtable com todas as páginas do wizard.
     * @param view Frame principal da aplicação.
     */
    public void nextClick(Hashtable wzPages, SfwInstaladorScriptView view) {
        view.setWizardPage((JPanel)wzPages.get("wzSetup"));
    }

    /**
     * Implementação da ação do botão "Anterior" para esta página.
     * @param wzPages Hashtable com todas as páginas do wizard.
     * @param view Frame principal da aplicação.
     */
    public void backClick(Hashtable wzPages, SfwInstaladorScriptView view) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    /**
     * Implementação de setup inicial da página.
     * @param view Frame principal da aplicação.
     */
    public void flowSetup(SfwInstaladorScriptView view) {
        view.getBackButton().setEnabled(false);
        view.getNextButton().setEnabled(true);
    }

    /**
     * Le texto no welcome.txt
     * @return Texto formatado.
     */
    private String carregaTextoJTA(){
        String texto = "";
        String str = "";

        Locale locale = Locale.getDefault();
        
        File arquivo = null;
        
        if(locale.getLanguage().equals("en")){
        	arquivo = new File("welcome_en.txt");
        }else if(locale.getLanguage().equals("es")){
        	arquivo = new File("welcome_es.txt");
        }else{
        	arquivo = new File("welcome.txt");
        }
        
        try {
            BufferedReader bf = new BufferedReader(new FileReader(arquivo));
            while((str = bf.readLine()) != null){
                texto += str + "\n";
            }
        } catch (IOException ex) {
            Logger.getLogger(SfwWizardWelcome.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }

        return texto;
    }

}
